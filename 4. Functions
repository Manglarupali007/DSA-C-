//function
#include<iostream>
using namespace std;
void func(){
    cout<<"Hello World!"<<"\n";
}
int main(){
    func();
return 0;
}

----------------------------

//Sum of two numbers
#include<iostream>
using namespace std;
int SumofNumbers(int a, int b){
    return a+b;
}
int main(){
    int a,b;
cin>>a;
cin>>b;
cout<<SumofNumbers(a,b);
return 0;
}

-------------------------------

//Min of 2 num
#include<iostream>
using namespace std;
int Minimum(int a, int b){
    if(a>b){
        return b;
    }
    return a;
}
int main(){
    int a,b;
cin>>a;
cin>>b;
cout<<Minimum(a,b);
return 0;
}

------------------------------

//Calculate sum of numbers 1 to n
#include<iostream>
using namespace std;
int sumN(int n){
int sum=0;
for(int i=1;i<=n;i++){
    sum+=i;
}
    return sum;
}
int main(){
    int n;
cin>>n;
cout<<sumN(n);
return 0;
}

----------------------------------

//Factorial
#include<iostream>
using namespace std;
int Factorial(int n){
int fact=1;
for(int i=1;i<=n;i++){
    fact*=i;
}
    return fact;
}
int main(){
    int n;
cin>>n;
cout<<Factorial(n);
return 0;
}

---------------------------------

//Pass by value - copy of argument is passed to function

---------------------------------

//Sum of digits
#include<iostream>
using namespace std;
int SumD(int n){
    int sum=0;
    while(n>0){
        int rem=n%10;
        sum+=rem;
        n/=10;
    }
    return sum;
}
int main(){
    int n=918;
    cout<<SumD(n);
}

----------------------------------

//prime or not
#include<iostream>
using namespace std;
int Prime(int n){
if(n<2){
    return 0;
}
for(int i=2;i<n;i++){
    if(n%i==0){
        return 0;
        break;
    }
}
return 1;
}
int main(){
int num;
cin>>num;
if(Prime(num)){
    cout<<"Prime";
}
else{
    cout<<"Non-Prime";
}
}

--------------------------------

//Fibonacci number
#include<iostream>
using namespace std;
int fibo(int n){
    int a=0;
    int b=1;
    int c;
    for(int i=3;i<=n;i++){
        c=a+b;
        a=b;
        b=c;
    }
    return c;
}
int main(){
int n=5;
cout<<fibo(n);
}
